.header{
	&__top{
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		background-color: $mainDarkColor;
	}
}
.top-header{
	padding: rem(10) 0; //это отступы безопасности (сверху и снизу)
	&__container{
		display: flex;
		align-items: center;
		gap: rem(20);
		min-height: rem(50); //по макету ширина меню 70px = (padding - 20px + 50px)
	}
	&__menu{
		flex: 1 1 auto; //что бы расширялось на всю ширину
	}
}
.menu{
	&__body{}
	&__icon{}
	&__item{}
	&__list{
		display: flex;
		//далее - если в меню будет много пунктов меню, и что бы они все отображались и слепались друг к другу (что бы было надежно)
		flex-wrap: wrap;
		row-gap: 5px; //на всякий случай (в макете его нет)
		//адаптивное расстояние между пунктами меню
		@include adaptiveValueModified("column-gap", $minWidth, 10, $maxWidthContainer, 60);
	}
	&__link{
		font-size: rem(16);
		color: #fff;
		line-height: math.div(20, 16); //20 - это line-height по макету, 16 - font-size
		transition: all .25s ease 0s;
		&:hover{
			color: #942424;
		}
	}
}

// этот код закомментировать и оставить как шаблон в header.scss
// Burger
.icon-menu{
	display: none;
	@media #{$large-mobile} {
		display: block;
		position: relative;
		//т.к. бургер это flex элемент, то надо указывать ширину так, а не через width и тогда бургер при уменьшении экрана не будет сужаться
		flex: 0 0 30px; 
		//width: 30px;
		height: 18px;
		cursor: pointer;
		z-index: 5;
		span,
		&::before,
		&::after{
			content: "";
			transition:  all .3s ease 0s;
			left: 0;
			position: absolute;
			width: 100%;
			height: 2px;
			background-color: #fff;
		}
		&::before{
			top: 0;
		}
		&::after{
			bottom: 0px;
		}
		span{
			top: calc(50% - 1px);
		}
		&.menu-open{//из бургера делается крестик
			span{
				transform: scale(0);
			}
			&::before{
				transform: rotate(-45deg);
				top: calc(50% - 1px);
			}
			&::after{
				transform: rotate(45deg);
				bottom: calc(50% - 1px);
			}
		}
		&:hover{
			span,
			&::before,
			&::after{
				background-color: #942424;
			}
		}
	}
}